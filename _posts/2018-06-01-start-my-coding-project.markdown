---
layout: post
title:  "开始我的代码大全项目"
date:   2018-06-01 +0800
categories: jekyll update
---
当我开始打算做这个项目([地址](https://github.com/razertory/Datastructure-in-Java))的时候，我的想法是很简单纯粹的。在这个时代，我们获取知识的途径很多，各种文章论坛公众号满天飞。我也越来越发现，对于我这种想更精进的人而言，自始至终地专注、安静地去实现一个数据结构成了一件很吸引我的事情。所以，在 https://github.com/buptdavid/datastructure 这个项目的指引下，我打算基于它做一些更全面，更细致的东西。

### 结构&内容
基础的数据结构和算法必不可少，那么“基础”的程度我想先以红皮书《算法》为主。确保在这个点上，我能做到最好。随后，我想加入《算法导论》的内容和案例。几个好处：第一，《算法导论》提到的案例以及实现都是工业级的，比如切割钢条，DNA最长公共序列，股票涨幅等。第二，《算法导论》里面给出了大量的数学推导和论证。所以在后期做性能测试的时候，如果我的测试结果和预想的有偏差，我可以找到理论依据或者的确是自己出bug的地方。再者，并发编程，IO，网络编程，设计模式以及一些系统设计的内容同样是这个项目会涉及的。

### 测试
在实际的项目开发中，编写测试代码是很多公司为了保证软件质量的推荐方法。但是在这个项目里面，除了证明算法的正确性。更多的是在于能够让使用者在研究某个代码的时候，能够方便、清晰发现程序是怎么跑的。这一点很重要，相比于只给出代码和代码的图文讲解，我认为：每个人的理解能力和理解方式都是不同的，但做编码工作的人，大量的认知和理论都会实现到代码上。所以，只有很清楚自己要写什么样的代码的时候，才能真正按照意图写出来。这一点，我认为通过测试用例的方式是最好。当我想理解一段代码的时候，我可以debug，可以试做修改通过跑测试的方式来证明自己的思路是没有问题的。

在编写测试代码的时候，我常常遇到了一些问题，比如给定一个数组生成最低二叉搜索树，我该如何证明生成的二叉搜索树是最低的。在我写单例模式的测试代码的时候，我发现我需要模拟并发的情景来证明一些线程安全问题。这个过程充满了挑战和乐趣。

### Java
对于理解一个程序的运行以及编写一段代码，我认为了解这个语言是很重要的事情。况且我现在做的是我自己称之为“代码大全”的东西。Java语言本身的效率，安全性，严谨性和广泛性在如今流行编程语言中始终名列前茅。所以选择Java一定是目前看来较为正确和有效的选择。